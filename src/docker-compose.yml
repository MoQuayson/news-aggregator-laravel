version: '3.8'

services:
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: news-aggregator-api
    container_name: news-aggregator-api
    environment:
      APP_NAME: "New Aggregator Api"
      APP_ENV: local
      APP_KEY: base64:Wa8Q3zX5dQNl8RKo8ZEVHNpHCWxTOfBMlXi5HX0jqzg= 
      APP_DEBUG: true
      APP_TIMEZONE: UTC
      APP_URL: http://localhost
      APP_LOCALE: en
      APP_FALLBACK_LOCALE: en
      APP_FAKER_LOCALE: en_US
      APP_MAINTENANCE_DRIVER: file
      # APP_MAINTENANCE_STORE: database
      PHP_CLI_SERVER_WORKERS: 4
      BCRYPT_ROUNDS: 12
      LOG_CHANNEL: stack
      LOG_STACK: single
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5433
      DB_DATABASE: news_aggregator_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      SESSION_DRIVER: database
      SESSION_LIFETIME: 120
      SESSION_ENCRYPT: false
      SESSION_PATH: /
      SESSION_DOMAIN: null
      BROADCAST_CONNECTION: log
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: database
      CACHE_STORE: database
      CACHE_PREFIX: 
      MEMCACHED_HOST: 127.0.0.1
      REDIS_CLIENT: phpredis
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: log
      MAIL_SCHEME: null
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: 2525
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_FROM_ADDRESS: "hello@example.com"
      MAIL_FROM_NAME: "${APP_NAME}"
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: 
      AWS_USE_PATH_STYLE_ENDPOINT: false
      VITE_APP_NAME: "${APP_NAME}"
      OPEN_NEWS_API_KEY: "c483607e16f545d9af83d0ac65a46269"
      NY_TIMES_API_KEY: "eDYjkNSXBhi6BHyRwjsMt7dIgjKqH25M"
      GUARDIANS_API_KEY: "d5b351f2E-9369-4fd9-9368-37f9d27c7cee"

    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
      - ./api/storage:/var/www/html/storage
    networks:
      - laravel
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: news_aggregator_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - laravel

  nginx:
    image: nginx:1.25
    container_name: nginx-server
    restart: unless-stopped
    volumes:
      - ./api:/var/www/html
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    networks:
      - laravel

volumes:
  postgres_data:

networks:
  laravel:
